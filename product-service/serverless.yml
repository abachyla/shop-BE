# For full config options, check the docs:
#    docs.serverless.com
#

service: product-service-6
frameworkVersion: '3'

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin

useDotenv: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  httpApi:
    cors: true
  environment:
    PG_HOST: ${env:PG_HOST}
    PG_PORT: ${env:PG_PORT}
    PG_DATABASE: ${env:PG_DATABASE}
    PG_USERNAME: ${env:PG_USERNAME}
    PG_PASSWORD: ${env:PG_PASSWORD}
    SNS_ARN:
      Ref: SNSTopic
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "sqs:*"
          Resource: !GetAtt SQSQueue.Arn
        - Effect: Allow
          Action:
            - 'sns:*'
          Resource:
            Ref: SNSTopic

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: 'npm'
    excludeFiles: /**/*.test.js

package:
  individually: true

functions:
  getProducts:
    handler: handlers/getProductsList.getProductsList
    events:
      - httpApi:
          path: /products
          method: get
  createProduct:
    handler: handlers/createProduct.createProduct
    events:
      - httpApi:
          path: /products
          method: post
  getProductById:
    handler: handlers/getProductsById.getProductsById
    events:
      - httpApi:
          path: /products/{productId}
          method: get
  catalogBatchProcess:
    handler: handlers/catalogBatchProcess.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn: !GetAtt SQSQueue.Arn

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: ${env:SNS_EMAIL}
        Protocol: email
        TopicArn:
          Ref: SNSTopic
    SNSCustomSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: ${env:SNS_EMAIL_2}
        Protocol: email
        TopicArn:
          Ref: SNSTopic
        FilterPolicy:
          expensive:
            - 'true'
  Outputs:
    SQSUrl:
      Value:
        Ref: SQSQueue
      Export:
        Name: SQSUrl
    SQSQueueArn:
      Value: !GetAtt SQSQueue.Arn
      Export:
        Name: SQSQueueArn
    SNSTopic:
      Value:
        Ref: SNSTopic
      Export:
        Name: SNSTopic
    SNSSubscription:
      Value:
        Ref: SNSSubscription
      Export:
        Name: SNSSubscription
